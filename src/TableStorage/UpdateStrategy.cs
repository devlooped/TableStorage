//<auto-generated/>
#nullable enable

using System.ComponentModel;
using Azure.Data.Tables;

namespace Devlooped
{
    /// <summary>
    /// Provides the strategy used when saving entities (using `PutAsync`) that 
    /// already exist in the table. Either <see cref="Merge"/> or <see cref="Replace"/>. 
    /// When not provided, <see cref="Replace"/> is used by default.
    /// </summary>
    [EditorBrowsable(EditorBrowsableState.Never)]
    abstract partial class UpdateStrategy
    {
        /// <summary>
        /// When storing an entity that already exists in the table, merge with the
        /// existing data.
        /// </summary>
        public static UpdateStrategy Merge { get; } = new MergeStrategy();

        /// <summary>
        /// When storing an entity that already exists in the table, replace the 
        /// existing data.
        /// </summary>
        public static UpdateStrategy Replace { get; } = new ReplaceStrategy();

        /// <summary>
        /// Gets the mode in which updates should be performed for the given strategy.
        /// </summary>
        protected abstract internal TableUpdateMode UpdateMode { get; }

        /// <summary>
        /// Provides automatic conversion from <see cref="UpdateStrategy"/> to the 
        /// new <see cref="TableUpdateMode"/> enumeration.
        /// </summary>
        public static implicit operator TableUpdateMode(UpdateStrategy strategy) => strategy.UpdateMode;

        class MergeStrategy : UpdateStrategy
        {
            protected internal override TableUpdateMode UpdateMode => TableUpdateMode.Merge;
        }

        class ReplaceStrategy : UpdateStrategy
        {
            protected internal override TableUpdateMode UpdateMode => TableUpdateMode.Replace;
        }
    }
}
