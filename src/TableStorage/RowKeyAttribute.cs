//<auto-generated/>
#nullable enable
using System;
using System.Linq.Expressions;

namespace Devlooped
{
    /// <summary>
    /// Flags the property to use as the table storage row key 
    /// when storing the annotated type using <see cref="TableRepository{T}"/> or 
    /// <see cref="TablePartition{T}"/>.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property | AttributeTargets.Parameter)]
    partial class RowKeyAttribute : TableStorageAttribute
    {
        /// <summary>
        /// Creates a strong-typed accessor expression for the property annotated 
        /// with <see cref="RowKeyAttribute"/> for instances of the given type 
        /// <typeparamref name="TEntity"/>.
        /// </summary>
        public static Expression<Func<TEntity, string>> CreateAccessor<TEntity>() => CreateGetter<TEntity, RowKeyAttribute>();

        /// <summary>
        /// Creates a strong-typed fast compiled accessor for the property annotated 
        /// with <see cref="RowKeyAttribute"/> for instances of the given type 
        /// <typeparamref name="TEntity"/>.
        /// </summary>
        public static Func<TEntity, string> CreateCompiledAccessor<TEntity>() => CreateCompiledGetter<TEntity, RowKeyAttribute>();
    }
}
