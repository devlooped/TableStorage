//<auto-generated/>
#nullable enable
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Devlooped
{
    /// <summary>
    /// Default implementation of <see cref="IStringDocumentSerializer"/> which 
    /// uses Newtonsoft.Json for serialization.
    /// </summary>
    partial class JsonDocumentSerializer : IStringDocumentSerializer
    {
        static readonly JsonSerializerSettings settings = new JsonSerializerSettings
        {
            Converters =
            {
                new IsoDateTimeConverter
                {
                    DateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffK",
                    DateTimeStyles = DateTimeStyles.AdjustToUniversal
                },
            },
            DateFormatHandling = DateFormatHandling.IsoDateFormat,
            DateFormatString = "yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffK",
            Formatting = Formatting.Indented,
            NullValueHandling = NullValueHandling.Ignore,
        };

        /// <summary>
        /// Default instance of the serializer.
        /// </summary>
        public static IDocumentSerializer Default { get; } = new JsonDocumentSerializer();

        /// <inheritdoc />
        public T? Deserialize<T>(string data) => JsonConvert.DeserializeObject<T>(data, settings);

        /// <inheritdoc />
        public string Serialize<T>(T value) => JsonConvert.SerializeObject(value, settings);
    }
}
